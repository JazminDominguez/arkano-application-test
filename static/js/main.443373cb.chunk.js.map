{"version":3,"sources":["Components/Header.js","Components/Firestore.js","Components/Form.js","Components/Dashboard.js","Components/NavBar.js","App.js","serviceWorker.js","index.js"],"names":["Header","react_default","a","createElement","className","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","DashForm","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","updateInput","e","setState","defineProperty","target","name","value","addData","preventDefault","firestore","collection","add","newPurchases","state","newUsers","newViews","purchasesIncrease","Form_default","onSubmit","Group","controlId","Label","Control","required","type","placeholder","onChange","Button_default","variant","Component","Dashboard","setAllStates","purchases","users","views","items","allData","get","then","querySnapshot","data","docs","map","doc","key","hasOwnProperty","element","objetoVacio","push","console","log","CardDeck_default","Card_default","bg","text","style","width","Body","Title","Text","Footer","NavBar","react_router_dom","exact","to","react_router","path","component","App","Components_Header","Components_NavBar","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.443373cb.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Header = () => {\r\n    return (\r\n        <header className=\"App-header\">\r\n            <span className=\"eVentas\">\r\n                <h2> e-Ventas </h2>\r\n            </span>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header;","import firebase from 'firebase';\r\n\r\n\r\nconst config = {\r\n    apiKey: \"AIzaSyC8tF0MvIHH9yV60lkZ8dULoDVS0sWQ1gs\",\r\n    authDomain: \"arkano-test-7fad5.firebaseapp.com\",\r\n    databaseURL: \"https://arkano-test-7fad5.firebaseio.com\",\r\n    projectId: \"arkano-test-7fad5\",\r\n    storageBucket: \"\",\r\n    messagingSenderId: \"734194396122\",\r\n    appId: \"1:734194396122:web:6996f286bd3a1355\"\r\n  };\r\n\r\n  firebase.initializeApp(config);\r\n\r\nexport default firebase;","import React, { Component } from \"react\";\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\nimport firebase from \"./Firestore\";\r\n\r\n\r\nclass DashForm extends Component {\r\n  constructor(){\r\n    super();\r\n    this.state={\r\n      newPurchases: \"\",\r\n      newUsers: \"\",\r\n      newViews: \"\",\r\n      purchasesIncrease: \"\",\r\n    };\r\n  }\r\n\r\n  updateInput = e =>{\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    });\r\n  }\r\n\r\n  addData=e=>{\r\n    e.preventDefault();\r\n    const db = firebase.firestore();\r\n    db.collection(\"sales-data\").add({\r\n      newPurchases: this.state.newPurchases,\r\n      newUsers: this.state.newUsers,\r\n      newViews: this.state.newViews,\r\n      purchasesIncrease: this.state.purchasesIncrease,\r\n    })    \r\n    this.setState({\r\n      newPurchases: \"\",\r\n      newUsers: \"\",\r\n      newViews: \"\",\r\n      purchasesIncrease: \"\",\r\n    })\r\n  }\r\n  render() {\r\n    return (\r\n      <section className=\"content-form\">\r\n        <div className=\"dashboard-titles\">\r\n         <h2 className=\"title\">Dashboard Form</h2>\r\n        <p className=\"subtitle\">   FORMULARIO</p>\r\n        </div>\r\n      <div className=\"form-size\">\r\n      <Form onSubmit={this.addData}>\r\n        <p>Datos en Dashboard</p>\r\n\r\n        <Form.Group controlId=\"formBasicPassword\">\r\n          <Form.Label>Cantidad de nuevas compras</Form.Label>\r\n          <Form.Control required\r\n              type=\"value\" \r\n              placeholder=\"Nuevas Compras\"\r\n               name=\"newPurchases\" \r\n               onChange={this.updateInput} \r\n               value={this.state.newPurchases}/>\r\n        </Form.Group>\r\n        <Form.Group controlId=\"formBasicPassword\">\r\n          <Form.Label>Incremento de compras</Form.Label>\r\n          <Form.Control required\r\n           type=\"value\" \r\n           placeholder=\"% Nuevas Compras\" \r\n           name=\"purchasesIncrease\" \r\n           onChange={this.updateInput} \r\n           value={this.state.purchasesIncrease}/>\r\n        </Form.Group>\r\n        <Form.Group controlId=\"formBasicPassword\">\r\n          <Form.Label>Cantidad Nuevos Usuarios</Form.Label>\r\n          <Form.Control required\r\n           type=\"value\"\r\n            placeholder=\"Nuevos Usuarios\"\r\n            name=\"newUsers\"\r\n            onChange={this.updateInput} \r\n            value={this.state.newUsers} />\r\n        </Form.Group>\r\n        <Form.Group controlId=\"formBasicPassword\">\r\n          <Form.Label>Cantidad Nuevas Visitas</Form.Label>\r\n          <Form.Control required \r\n          type=\"value\"\r\n           placeholder=\"Nuevas Visitas\"\r\n           name=\"newViews\"\r\n           onChange={this.updateInput} \r\n           value={this.state.newViews} />\r\n        </Form.Group>   \r\n        <Button variant=\"primary\" type=\"Submit\">\r\n        Ingresar Datos\r\n  </Button>\r\n      </Form>\r\n      </div>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DashForm;","import React, { Component } from \"react\";\r\nimport CardDeck from 'react-bootstrap/CardDeck';\r\nimport Card from 'react-bootstrap/Card';\r\nimport firebase from \"./Firestore\";\r\n\r\nclass Dashboard extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      items: \"\",\r\n      purchases: [],\r\n      users: [],\r\n      views: [],\r\n      purchasesIncrease: [],\r\n    }\r\n  }\r\n\r\n  setAllStates=()=>{\r\n    const purchases = this.state.purchases;\r\n    const users = this.state.users;\r\n    const views = this.state.views;\r\n    const purchasesIncrease = this.state.purchasesIncrease\r\n \r\n    \r\n  }\r\n\r\n    \r\n\r\nrender() {\r\n  const allData=[]\r\n  const db = firebase.firestore();\r\n  db.collection(\"sales-data\")\r\n.get()\r\n.then(querySnapshot => {\r\n  const data = querySnapshot.docs.map(doc => doc.data());\r\n  //\r\n  for(const key in data){\r\n    if(data.hasOwnProperty(key)){\r\n    const element = data[key];\r\n    let objetoVacio = {\r\n    purchases: element.newPurchases,\r\n    users: element.newUsers,\r\n    views: element.newViews,\r\n    purchasesIncrease: element.purchasesIncrease,\r\n    }\r\n    allData.push(objetoVacio)\r\n  }}\r\nreturn allData} );\r\nconsole.log(allData)\r\n\r\n\r\n  return (\r\n    <section className=\"content-form\">\r\n      <div className=\"dashboard-titles\">\r\n        <h2 className=\"title\">Dashboard</h2>\r\n        <p className=\"subtitle\">   ESTADISTICAS</p>\r\n      </div>\r\n      <CardDeck>\r\n        <Card bg=\"info\" text=\"white\" style={{ width: '6rem' }}>\r\n          <Card.Body>\r\n            <Card.Title>150</Card.Title>\r\n            <Card.Text>\r\n              Nuevas Compras\r\n          </Card.Text>\r\n          </Card.Body>\r\n          <Card.Footer>\r\n            <small className=\"text-muted\">Más info</small>\r\n          </Card.Footer>\r\n        </Card>\r\n        <Card bg=\"success\" text=\"white\" style={{ width: '6rem' }}>\r\n          <Card.Body>\r\n            <Card.Title>53%</Card.Title>\r\n            <Card.Text>\r\n              Incremento de Compras\r\n          </Card.Text>\r\n          </Card.Body>\r\n          <Card.Footer>\r\n            <small className=\"text-muted\">Más info</small>\r\n          </Card.Footer>\r\n        </Card>\r\n        <Card bg=\"warning\" text=\"white\" style={{ width: '6rem' }}>\r\n          <Card.Body>\r\n            <Card.Title>44</Card.Title>\r\n            <Card.Text>\r\n              Nuevos Usuarios\r\n          </Card.Text>\r\n          </Card.Body>\r\n          <Card.Footer>\r\n            <small className=\"text-muted\">Más info</small>\r\n          </Card.Footer>\r\n        </Card>\r\n        <Card bg=\"danger\" text=\"white\" style={{ width: '6rem' }}>\r\n          <Card.Body>\r\n            <Card.Title>65</Card.Title>\r\n            <Card.Text>\r\n              Nuevas Visitas\r\n          </Card.Text>\r\n          </Card.Body>\r\n          <Card.Footer>\r\n            <small className=\"text-muted\">Más info</small>\r\n          </Card.Footer>\r\n        </Card>\r\n      </CardDeck>\r\n    </section>\r\n  );\r\n}\r\n}\r\n\r\nexport default Dashboard;","import React, { Component } from \"react\";\r\nimport {\r\n  Route,\r\n  NavLink,\r\n  HashRouter\r\n} from \"react-router-dom\";\r\nimport DashForm from \"./Form\";\r\nimport Dashboard from \"./Dashboard\";\r\n\r\nclass NavBar extends Component {\r\n    render(){\r\n    return (\r\n        <section className=\"nav\">\r\n            <section className=\"userInfo\">\r\n                <div className=\"userPhoto\"></div>\r\n                <div className=\"info\">\r\n                    <p className=\"userName\">Alexander Pierce</p>\r\n                    <span className=\"dot\"></span>\r\n                    <p className=\"userStatus\">Online</p>\r\n                </div>\r\n            </section>\r\n            <section className=\"mainNavigation\">\r\n                <p className=\"navigation-font\">\r\n                    MAIN NAVIGATION\r\n                </p>\r\n             </section>\r\n             <HashRouter>\r\n             <ul className=\"navBar\">\r\n                 <li><NavLink exact to=\"/\"></NavLink></li>\r\n                 <li><NavLink to=\"/form\">Form</NavLink></li>\r\n                 <li><NavLink to=\"/dashboard\">Dashboard</NavLink></li>\r\n             </ul>\r\n             <div className=\"content\">\r\n            <Route exact path=\"/\" component={DashForm}/>\r\n            <Route path=\"/form\" component={DashForm}/>\r\n            <Route path=\"/dashboard\" component={Dashboard}/>\r\n          </div>\r\n             </HashRouter>\r\n        </section>\r\n    )\r\n}}\r\n\r\nexport default NavBar;","import React from 'react';\nimport './App.css';\nimport Header from './Components/Header';\nimport NavBar from './Components/NavBar'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header/>\n     <NavBar/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\nserviceWorker.unregister();\n"],"sourceRoot":""}